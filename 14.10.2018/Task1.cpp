/*
Напишите программу проверяющую является ли число составным. В
программе гарантируется, что число - натуральное
*/
#include <iostream>
#include <cmath>
using namespace std;

int main() {
    //Инициализация и ввод переменных. N - исходное число, sqrtN - коернь из него (целая часть корня)
    unsigned int N, sqrtN;
    cin >> N;
    sqrtN = sqrt(N);

    //Число 1 не является простым, но и не является составным
    //Этот if проверяет это условие и, если N ровно 1, выводит "Unit" и завершает работу программы
    if (N == 1)
    {
        cout << "Unit\n";
        return 0; //Выход из программы
    };

    /*
    Если же число не является 1, то надо проверить есть ли у него делители, кроме 1 и самого себя
    Самый простой способ пройти все числа от 2 до N - 1 и посмотреть делится ли N на хотя бы одно из них
    Однако, если N делится на некоторое целое число i без остатка: N/i = y
    То легко показать, что одно из этих чисел не больше, чем sqrtN.
    Если i > sqrtN и y > sqrtN, то i*y > sqrtN * sqrtN, т.е. больше, чем N, однако i*y = N
    Отсюда следует, что хотя бы одно из чисел не больше чем sqrtN.
    */
    for (unsigned int i = 2; i <= sqrtN; i++)
    {
        if (N % i == 0) // Найдено такое число i
        {
            cout << "Composite\n";
            return 0; //Выход из программы
        };
    };
    //Так как в случае нахождения делетиля программа завершает свою работу
    //Тот факт, что программа дошла до этой точки, значит, что делетиля найдено не было, а значит N - простое
    cout << "Prime\n";
    return 0;
}
